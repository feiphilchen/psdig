{
   "traces": [
      {
         "name": "open",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_openat",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": "filename={args[filename]} mode={args[mode]} flags={args[flags]} ret={ret}"
         },
         "processor": ["psdig.file_processor.FdResolve"]
      },
      {
         "name": "open",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_open",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": "filename={args[filename]} mode={args[mode]} flags={args[flags]} ret={ret}"
         }
      },
      {
         "name": "read",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_read",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail":{
               "lambda":"'fd=%u count=%u ret=%d' % (args.get('fd'), args.get('count'), ret) + context_str(args)"
            }
         },
         "processor": ["psdig.file_processor.FdResolve"]
      },
      {
         "name": "write",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_write",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail":{
               "lambda":"'fd=%u count=%u ret=%d' % (args.get('fd'), args.get('count'), ret) + context_str(args)"
            }
         },
         "processor": ["psdig.file_processor.FdResolve"]
      },
      {
         "name": "close",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_close",
            "level": {
               "lambda": "'INFO' if ret == 0 else 'ERROR'"
            },
            "detail": {
                "lambda": "'fd=%u ret=%d' % (args.get('fd'), ret) + context_str(args)"
            }
         },
         "processor": ["psdig.file_processor.FdResolve"]
      },
      {
         "name": "unlink",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_unlink",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": "pathname={args[pathname]} ret={ret}"
         }
      },
      {
         "name": "unlink",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_unlinkat",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": "pathname={args[pathname]} ret={ret}"
         }
      },
      {
         "name": "truncate",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_truncate",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": "pathname={args[pathname]} length={args[length]} ret={ret}"
         }
      },
      {
         "name": "chown",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_chown",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": "filename={args[filename]} uid={args[user]} gid={args[group]} ret={ret}"
         }
      },
      {
         "name": "chown",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_fchownat",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": "filename={args[filename]} uid={args[user]} gid={args[group]} ret={ret}"
         }
      },
      {
         "name": "chmod",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_chmod",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": "filename={args[filename]} mode={args[mode]} ret={ret}"
         }
      },
      {
         "name": "chmod",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_fchmodat",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": "filename={args[filename]} mode={args[mode]} ret={ret}"
         }
      },
      {
         "name": "rmdir",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_rmdir",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": "{args[pathname]} ret={ret}"
         }
      },
      {
         "name": "mkdir",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_mkdir",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": "pathname={args[pathname]} mode={args[mode]} ret={ret}"
         }
      },
      {
         "name": "mkdir",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_mkdirat",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": "pathname={args[pathname]} mode={args[mode]} ret={ret}"
         }
      },
      {
         "name": "symlink",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_symlink",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": "oldname={args[oldname]} newname={args[newname]} ret={ret}"
         }
      },
      {
         "name": "symlink",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_symlinkat",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": "oldname={args[oldname]} newname={args[newname]} ret={ret}"
         }
      },
      {
         "name": "rename",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_rename",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": "oldname={args[oldname]} newname={args[newname]} ret={ret}"
         }
      },
      {
         "name": "rename",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_renameat",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": "olddfd={args[olddfd]} oldname={args[oldname]} newdfd={args[newdfd]} newname={args[newname]} ret={ret}"
         }
      },
      {
         "name": "rename",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_renameat2",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": "olddfd={args[olddfd]} oldname={args[oldname]} newdfd={args[newdfd]} newname={args[newname]} flags={args[flags]} ret={ret}"
         }
      },
      {
         "name": "mmap",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_mmap",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": "addr={args[addr]} len={args[len]} prot={args[prot]} flags={args[flags]} fd={args[fd]} off={args[off]} ret={ret}"
         },
         "processor": ["psdig.file_processor.FdResolve"]
      },
      {
         "name": "munmap",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_munmap",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": "addr={args[addr]} len={args[len]} ret={ret}"
         }
      },
      {
         "name": "kill",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_kill",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": "pid={args[pid]} signal={args[sig]} ret={ret}"
         }
      },
      {
         "name": "exec",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_execve",
            "detail": {
               "lambda": "' '.join(args['argv'])"
            }
         }
      },
      {
         "name": "fork",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_fork",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": "pid={ret}"
         }
      },
      {
         "name": "fork",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_clone",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": "pid={ret}"
         }
      },
      {
         "name": "exit",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_exit",
            "level": {
               "lambda": "'INFO' if args['error_code'] == 0 else 'ERROR'"
            },
            "detail": "error_code={args[error_code]}"
         }
      },
      {
         "name": "exit",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_exit_group",
            "level": {
               "lambda": "'INFO' if args['error_code'] == 0 else 'ERROR'"
            },
            "detail": "error_code={args[error_code]}"
         }
      },
      {
         "name": "setuid",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_setuid",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": "uid={args[uid]} ret={ret}"
         }
      },
      {
         "name": "sethostname",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_sethostname",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": "hostname={args[name]} ret={ret}"
         }
      },
      {
         "name": "socket",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_socket",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            }
         }
      },
      {
         "name": "listen",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_listen",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": "fd={args[fd]} backlog={args[backlog]} ret={ret}"
         }
      },
      {
         "name": "connect",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_connect",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": "uservaddr={args[uservaddr]} fd={args[fd]} ret={ret}"
         },
         "processor": ["psdig.file_processor.FdResolve"]
      },
      {
         "name": "accept",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_accept",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": "upeer_sockaddr={args[upeer_sockaddr]} ret={ret}"
         },
         "processor": ["psdig.file_processor.FdResolve"]

      },
      {
         "name": "accept",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_accept4",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": "upeer_sockaddr={args[upeer_sockaddr]} ret={ret}"
         },
         "processor": ["psdig.file_processor.FdResolve"]
      },
      {
         "name": "bind",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_bind",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": "umyaddr={args[umyaddr]} ret={ret}"
         }
      },
      {
         "name": "recvmsg",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_recvmsg",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": {
               "lambda": "'fd=%s' % args['fd'] + ' flags=%u' % args['flags'] + ' ret=%d' % ret + context_str(args)"
            }
         },
         "processor": ["psdig.file_processor.FdResolve"]
      },
      {
         "name": "recvmsg",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_recvfrom",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": "addr={args[addr]} fd={args[fd]} flags={args[flags]} ret={ret}"
         }
      },
      {
         "name": "recvmsg",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_recvmmsg",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": {
               "lambda": "'fd=%s' % args['fd'] + ' vlen=%u' % args['vlen'] + ' flags=%u' % args['flags'] + ' ret=%d' % ret + context_str(args)"
            }
         },
         "processor": ["psdig.file_processor.FdResolve"]
      },
      {
         "name": "sendmsg",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_sendmsg",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": {
               "lambda": "'fd=%s' % args['fd'] + ' flags=%u' % args['flags'] + ' ret=%d' % ret + context_str(args)"
            }
         },
         "processor": ["psdig.file_processor.FdResolve"]
      },
      {
         "name": "sendmsg",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_sendto",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": "addr={args[addr]} fd={args[fd]} len={args[len]} flags={args[flags]} ret={ret}"
         }
      },
      {  
         "name": "sendmsg",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_sendmmsg",
            "level": {
               "lambda": "'INFO' if ret >= 0 else 'ERROR'"
            },
            "detail": {
               "lambda": "'fd=%s' % args['fd'] + ' vlen=%u' % args['vlen'] + ' flags=%u' % args['flags'] + ' ret=%d' % ret + context_str(args)"
            }
         },
         "processor": ["psdig.file_processor.FdResolve"]
      },
      {
         "name": "mount",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_mount",
            "level": {
               "lambda": "'INFO' if ret == 0 else 'ERROR'"
            },
            "detail": "dev_name={args[dev_name]} dir_name={args[dir_name]} type={args[type]} ret={ret}"
         }
      },
      {
         "name": "umount",
         "type": "syscall",
         "parameters": {
            "syscall": "sys_umount",
            "level": {
               "lambda": "'INFO' if ret == 0 else 'ERROR'"
            },
            "detail": "name={args[name]} flags={args[flags]} ret={ret}"
         }
      },
      {
         "name": "tcp-recv-rst",
         "type": "event",
         "parameters": {
            "event": "tcp/tcp_receive_reset",
            "level": "WARNING",
            "detail": {
               "lambda": "'saddr=%s sport=%d daddr=%s dport=%d' % (inet_ntoa(args['saddr'].value), args['sport'], inet_ntoa(args['daddr'].value), args['dport'])"
            }
         }
      },
      {
         "name": "tcp-send-rst",
         "type": "event",
         "parameters": {
            "event": "tcp/tcp_send_reset",
            "level": "WARNING",
            "detail": {
               "lambda": "'saddr=%s sport=%d daddr=%s dport=%d' % (inet_ntoa(args['saddr'].value), args['sport'], inet_ntoa(args['daddr'].value), args['dport'])"
            }
         }
      }
   ]
}
